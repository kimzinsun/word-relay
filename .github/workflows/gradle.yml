name: Java CI with Gradle

on:
  push:
    branches: [ "main", "ci-cd" ]
  pull_request:
    branches: [ "main", "ci-cd" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push x86_64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: server
          platforms: linux/amd64
          push: true
          tags: wordrelayadmin/word-relay:latest
          build-args: TARGETPLATFORM=linux/amd64




  docker-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            sudo docker pull wordrelayadmin/word-relay:latest
            sudo docker stop wordrelay-server
            sudo docker rm wordrelay-server
            sudo docker run -d -p 8080:8080 --name wordrelay-server wordrelayadmin/word-relay:latest

  dependency-submission:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.5'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
        with:
          build-root-directory: server
